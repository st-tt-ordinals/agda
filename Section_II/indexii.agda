----------------------------------------------------------------------------------------------------
-- Index of the Agda Development of the paper
--
--     Set-Theoretic and Type-Theoretic Ordinals Coincide
--
----------------------------------------------------------------------------------------------------

{- ¬ßII ORDINALS IN TYPE THEORY AND SET THEORY -}

-- These files are tested with
--
--  ‚óè Agda version 2.6.2.2 and
--
--  ‚óè TypeTopology (commit: 318d913c878c1f3cbcfd03c911ed6c1461bf1d9f)

{-# OPTIONS --safe #-}

open import MLTT.Spartan

open import UF.PropTrunc
open import UF.Univalence
open import UF.Base hiding (_‚âà_)
open import UF.Equiv
open import UF.EquivalenceExamples
open import UF.FunExt
open import UF.Size
open import UF.Subsingletons
open import UF.Subsingletons-FunExt
open import UF.Quotient hiding (is-prop-valued)
open import UF.UA-FunExt

open import RelationIff

module _ (pt : propositional-truncations-exist)
         (ua : Univalence)
         (ùì§ : Universe)
         (sq : set-quotients-exist)
 where

open import UF.ImageAndSurjection pt

open PropositionalTruncation pt

private
 fe : Fun-Ext
 fe = Univalence-gives-Fun-Ext ua

 fe' : FunExt
 fe' _ _ = fe

 pe : Prop-Ext
 pe = Univalence-gives-Prop-Ext ua

open import CumulativeHierarchy pt fe pe
open import CumulativeHierarchy-LocallySmall pt fe pe
open import OrdinalCumulativeHierarchy pt ua ùì§
open import OrdinalCumulativeHierarchy-Addendum pt ua ùì§

open import Ordinals.Notions
open import Ordinals.OrdinalOfOrdinals ua
open import Ordinals.Type
open import Ordinals.WellOrderTransport fe'
open import Ordinals.Underlying
open import Ordinals.OrdinalOfOrdinalsSuprema ua
open import Ordinals.Arithmetic fe'
open import Ordinals.Arithmetic-Properties ua

module _ (ch : cumulative-hierarchy-exists ùì§)
 where

 open cumulative-hierarchy-exists ch
 open ùïç-is-locally-small ch
 open ordinal-of-set-theoretic-ordinals ch
 open total-space-of-an-element-of-ùïç
 open Œ®-construction sq
 open ùïç-set-carrier-quotient ch sq
 open small-quotient-as-ordinal
 open quotient-as-ordinal
 open suprema pt (set-replacement-from-set-quotients sq pt)


 {- A. Ordinals in homotopy type theory -}

 -- Accessibility
 Definition-1 : {X : ùì§ Ãá} (_<_ : X ‚Üí X ‚Üí ùì• Ãá) ‚Üí X ‚Üí ùì§ ‚äî ùì• Ãá
 Definition-1 = is-accessible

 Lemma-2-‚Üí : {X : ùì§ Ãá} (_<_ : X ‚Üí X ‚Üí ùì• Ãá)
           ‚Üí (‚àÄ x ‚Üí is-accessible _<_ x)
           ‚Üí ‚àÄ {ùì¶} (P : X ‚Üí ùì¶ Ãá) ‚Üí (‚àÄ x ‚Üí (‚àÄ y ‚Üí y < x ‚Üí P y) ‚Üí P x) ‚Üí ‚àÄ x ‚Üí P x
 Lemma-2-‚Üí = transfinite-induction
 --
 Lemma-2-‚Üê : {X : ùì§ Ãá} (_<_ : X ‚Üí X ‚Üí ùì• Ãá)
           ‚Üí (‚àÄ {ùì¶} (P : X ‚Üí ùì¶ Ãá) ‚Üí (‚àÄ x ‚Üí (‚àÄ y ‚Üí y < x ‚Üí P y) ‚Üí P x) ‚Üí ‚àÄ x ‚Üí P x)
           ‚Üí ‚àÄ x ‚Üí is-accessible _<_ x
 Lemma-2-‚Üê _<_ ti = ti (is-accessible _<_) (Œª _ ‚Üí step)

 -- Type-theoretic ordinal
 Definition-3 : ({X : ùì§ Ãá} (_<_ : X ‚Üí X ‚Üí ùì• Ãá) ‚Üí (ùì§ ‚äî ùì• Ãá))
              √ó ({X : ùì§ Ãá} (_<_ : X ‚Üí X ‚Üí ùì• Ãá) ‚Üí (ùì§ ‚äî ùì• Ãá))
              √ó ({X : ùì§ Ãá} (_<_ : X ‚Üí X ‚Üí ùì• Ãá) ‚Üí (ùì§ ‚äî ùì• Ãá))
              √ó ({X : ùì§ Ãá} (_<_ : X ‚Üí X ‚Üí ùì• Ãá) ‚Üí (ùì§ ‚äî ùì• Ãá))
              √ó (ùì§ ‚Å∫ Ãá)
 Definition-3 = is-prop-valued
              , is-well-founded
              , is-extensional
              , is-transitive
              , Ordinal _

 Remark-4 : (Œ± : Ordinal ùì§) ‚Üí is-set ‚ü® Œ± ‚ü©
 Remark-4 = underlying-type-is-set fe'

 -- Initial segment and bounded simulation
 -- The bounded simulation relation ‚ä≤ is named < in the paper.
 Definition-5 : ((Œ± : Ordinal ùì§) ‚Üí ‚ü® Œ± ‚ü© ‚Üí Ordinal ùì§)
              √ó (Ordinal ùì§ ‚Üí Ordinal ùì§ ‚Üí ùì§ ‚Å∫ Ãá)
 Definition-5 = _‚Üì_
              , _‚ä≤_

 -- ‚ä≤‚Åª is the small version of ‚ä≤
 Remark-6 : (Œ± Œ≤ : Ordinal ùì§) ‚Üí (Œ± ‚ä≤ Œ≤) ‚âÉ (Œ± ‚ä≤‚Åª Œ≤)
 Remark-6 = ‚ä≤-is-equivalent-to-‚ä≤‚Åª

 -- The ordinal OO of ordinals is named Ord in the paper.
 Theorem-7 : is-well-order (_‚ä≤_ {ùì§}) √ó (Ordinal (ùì§ ‚Å∫))
 Theorem-7 = ‚ä≤-is-well-order , OO _

 -- Simulation
 -- The simulation relation ‚ä¥ is named ‚â§ in the paper.
 Definition-8 : ((Œ± : Ordinal ùì§) (Œ≤ : Ordinal ùì•) ‚Üí (‚ü® Œ± ‚ü© ‚Üí ‚ü® Œ≤ ‚ü©) ‚Üí ùì§ ‚äî ùì• Ãá)
              √ó (Ordinal ùì§ ‚Üí Ordinal ùì• ‚Üí ùì§ ‚äî ùì• Ãá)
 Definition-8 = is-simulation
              , _‚ä¥_

 Proposition-9 : ((Œ± : Ordinal ùì§) ‚Üí Œ± ‚ä¥ Œ±)
               √ó ((Œ± Œ≤ : Ordinal ùì§) ‚Üí Œ± ‚ä¥ Œ≤ ‚Üí Œ≤ ‚ä¥ Œ± ‚Üí Œ± Ôºù Œ≤)
               √ó ((Œ± : Ordinal ùì§) (Œ≤ : Ordinal ùì•) (Œ≥ : Ordinal ùì¶) ‚Üí Œ± ‚ä¥ Œ≤ ‚Üí Œ≤ ‚ä¥ Œ≥ ‚Üí Œ± ‚ä¥ Œ≥)
               √ó ((Œ± Œ≤ : Ordinal ùì§) ‚Üí Œ± ‚ä¥ Œ≤
                                    ‚Üí ‚àÄ Œ≥ ‚Üí Œ≥ ‚ä≤ Œ± ‚Üí Œ≥ ‚ä≤ Œ≤)
               √ó ({Œ± Œ≤ : Ordinal ùì§} ‚Üí (‚àÄ Œ≥ ‚Üí Œ≥ ‚ä≤ Œ± ‚Üí Œ≥ ‚ä≤ Œ≤)
                                    ‚Üí (a : ‚ü® Œ± ‚ü©) ‚Üí Œ£ b Íûâ ‚ü® Œ≤ ‚ü© , (Œ± ‚Üì a) Ôºù (Œ≤ ‚Üì b))
               √ó ({Œ± Œ≤ : Ordinal ùì§} ‚Üí ((a : ‚ü® Œ± ‚ü©) ‚Üí Œ£ b Íûâ ‚ü® Œ≤ ‚ü© , (Œ± ‚Üì a) Ôºù (Œ≤ ‚Üì b))
                                    ‚Üí Œ± ‚ä¥ Œ≤)
 Proposition-9 = ‚ä¥-refl
               , ‚ä¥-antisym
               , ‚ä¥-trans
               , ‚ä¥-gives-‚âº
               , from-‚âº
               , to-‚ä¥ _ _

 Lemma-10 : (Œ± : Ordinal ùì§) (Œ≤ : Ordinal ùì•) (f : ‚ü® Œ± ‚ü© ‚Üí ‚ü® Œ≤ ‚ü©)
          ‚Üí (is-order-equiv Œ± Œ≤ f) ‚Üî
            (is-equiv f √ó is-order-preserving Œ± Œ≤ f √ó is-order-reflecting Œ± Œ≤ f)
 Lemma-10 Œ± Œ≤ f = (Œª p ‚Üí order-equivs-are-equivs Œ± Œ≤ p
                       , order-equivs-are-order-preserving Œ± Œ≤ p
                       , order-equivs-are-order-reflecting Œ± Œ≤ f p)
                , (Œª (x , y , z) ‚Üí order-preserving-reflecting-equivs-are-order-equivs Œ± Œ≤ f x y z)

 Lemma-11 : (Œ± : Ordinal ùì§) (a b : ‚ü® Œ± ‚ü©) (p : b ‚â∫‚ü® Œ± ‚ü© a)
          ‚Üí ((Œ± ‚Üì a ) ‚Üì (b , p)) Ôºù (Œ± ‚Üì b)
 Lemma-11 = iterated-‚Üì

 -- Sum of type-theoretic ordinals
 Definition-12 : Ordinal ùì§ ‚Üí Ordinal ùì§ ‚Üí Ordinal ùì§
 Definition-12 = _+‚Çí_

 Lemma-13-i : {Œ± Œ≤ : Ordinal ùì§} (a : ‚ü® Œ± ‚ü©)
            ‚Üí (Œ± ‚Üì a) Ôºù ((Œ± +‚Çí Œ≤) ‚Üì inl a)
 Lemma-13-i = +‚Çí-‚Üì-left
 --
 Lemma-13-ii : (Œ± : Ordinal ùì§) ‚Üí (Œ± +‚Çí ùüô‚Çí) ‚Üì inr ‚ãÜ Ôºù Œ±
 Lemma-13-ii = +‚Çí-ùüô‚Çí-‚Üì-right

 -- Supremum of type-theoretic ordinals
 Definition-14 : {I : ùì§ Ãá} (Œ± : I ‚Üí Ordinal ùì§) ‚Üí Ordinal ùì§
 Definition-14 = sup

 Lemma-15-i : {I : ùì§ Ãá} (Œ± : I ‚Üí Ordinal ùì§)
            ‚Üí (i : I) (x : ‚ü® Œ± i ‚ü©) ‚Üí sup Œ± ‚Üì pr‚ÇÅ (sup-is-upper-bound Œ± i) x Ôºù Œ± i ‚Üì x
 Lemma-15-i = initial-segment-of-sup-at-component
 --
 Lemma-15-ii : {I : ùì§ Ãá} (Œ± : I ‚Üí Ordinal ùì§)
             ‚Üí (y : ‚ü® sup Œ± ‚ü©) ‚Üí ‚à• Œ£ i Íûâ I , Œ£ x Íûâ ‚ü® Œ± i ‚ü© , sup Œ± ‚Üì y Ôºù Œ± i ‚Üì x ‚à•
 Lemma-15-ii = initial-segment-of-sup-is-initial-segment-of-some-component

 {- B. Ordinals in set theory -}

 -- (Here, we phrase the definitions and lemmas from set theory in terms of ùïç introduced below.)

 -- Transitive set
 Definition-16 : ùïç ‚Üí ùì§ ‚Å∫ Ãá
 Definition-16 = is-transitive-set

 -- Example 17:

 ‚àÖ ‚ü®‚àÖ‚ü© ‚ü®‚àÖ,‚ü®‚àÖ‚ü©‚ü© ‚ü®‚ü®‚àÖ‚ü©‚ü© ‚ü®‚àÖ,‚ü®‚àÖ‚ü©,‚ü®‚ü®‚àÖ‚ü©‚ü©‚ü© : ùïç
 ‚àÖ = ùïç-set {ùüò} ùüò-elim
 ‚ü®‚àÖ‚ü© = ùïç-set {ùüô} (Œª _ ‚Üí ‚àÖ)
 ‚ü®‚àÖ,‚ü®‚àÖ‚ü©‚ü© = ùïç-set {ùüô {ùì§} + ùüô {ùì§}} (cases (Œª _ ‚Üí ‚àÖ) (Œª _ ‚Üí ‚ü®‚àÖ‚ü©))
 ‚ü®‚ü®‚àÖ‚ü©‚ü© = ùïç-set {ùüô} Œª _ ‚Üí ‚ü®‚àÖ‚ü©
 ‚ü®‚àÖ,‚ü®‚àÖ‚ü©,‚ü®‚ü®‚àÖ‚ü©‚ü©‚ü© = ùïç-set {ùüô {ùì§} + ùüô {ùì§} + ùüô {ùì§}} (cases (Œª _ ‚Üí ‚àÖ) (cases (Œª _ ‚Üí ‚ü®‚àÖ‚ü©) Œª _ ‚Üí ‚ü®‚ü®‚àÖ‚ü©‚ü©))

 ¬¨x‚àà‚àÖ : {x : ùïç} ‚Üí x ‚àà ‚àÖ ‚Üí ùüò
 ¬¨x‚àà‚àÖ x‚àà‚àÖ = ‚à•‚à•-rec ùüò-is-prop pr‚ÇÅ (from-‚àà-of-ùïç-set x‚àà‚àÖ)

 Example-17-i : is-transitive-set ‚àÖ
 Example-17-i u v u‚àà‚àÖ v‚ààu = ùüò-elim (¬¨x‚àà‚àÖ u‚àà‚àÖ)

 Example-17-ii : is-transitive-set ‚ü®‚àÖ‚ü©
 Example-17-ii u v u‚àà‚ü®‚àÖ‚ü© v‚ààu =
   ‚à•‚à•-rec ‚àà-is-prop-valued
         (Œª (_ , ‚àÖÔºùu) ‚Üí ùüò-elim (¬¨x‚àà‚àÖ (transport (v ‚àà_) (‚àÖÔºùu ‚Åª¬π) v‚ààu)))
         (from-‚àà-of-ùïç-set u‚àà‚ü®‚àÖ‚ü©)

 Example-17-iii : is-transitive-set ‚ü®‚àÖ,‚ü®‚àÖ‚ü©‚ü©
 Example-17-iii u v u‚àà‚ü®‚àÖ,‚ü®‚àÖ‚ü©‚ü© v‚ààu =
   ‚à•‚à•-rec ‚àà-is-prop-valued
         (Œª { (inl _ , ‚àÖÔºùu) ‚Üí ùüò-elim (¬¨x‚àà‚àÖ (transport (v ‚àà_) (‚àÖÔºùu ‚Åª¬π) v‚ààu))
            ; (inr _ , ‚ü®‚àÖ‚ü©Ôºùu) ‚Üí ‚à•‚à•-rec ‚àà-is-prop-valued
                                       (Œª (_ , ‚àÖÔºùv) ‚Üí to-‚àà-of-ùïç-set ‚à£ inl _ , ‚àÖÔºùv ‚à£)
                                       (from-‚àà-of-ùïç-set (transport (v ‚àà_) (‚ü®‚àÖ‚ü©Ôºùu ‚Åª¬π) v‚ààu))
            })
         (from-‚àà-of-ùïç-set u‚àà‚ü®‚àÖ,‚ü®‚àÖ‚ü©‚ü©)

 Example-17-iv : is-transitive-set ‚ü®‚àÖ,‚ü®‚àÖ‚ü©,‚ü®‚ü®‚àÖ‚ü©‚ü©‚ü©
 Example-17-iv u v u‚àà‚ü®‚àÖ,‚ü®‚ü®‚àÖ‚ü©‚ü©‚ü© v‚ààu =
   ‚à•‚à•-rec ‚àà-is-prop-valued
         (Œª { (inl _ , ‚àÖÔºùu) ‚Üí ùüò-elim (¬¨x‚àà‚àÖ (transport (v ‚àà_) (‚àÖÔºùu ‚Åª¬π) v‚ààu))
            ; (inr (inl _) , ‚ü®‚àÖ‚ü©Ôºùu) ‚Üí ‚à•‚à•-rec ‚àà-is-prop-valued
                                             (Œª (_ , ‚àÖÔºùv) ‚Üí to-‚àà-of-ùïç-set ‚à£ inl _ , ‚àÖÔºùv ‚à£)
                                             (from-‚àà-of-ùïç-set (transport (v ‚àà_) (‚ü®‚àÖ‚ü©Ôºùu ‚Åª¬π) v‚ààu))
            ; (inr (inr _) , ‚ü®‚ü®‚àÖ‚ü©‚ü©Ôºùu) ‚Üí ‚à•‚à•-rec ‚àà-is-prop-valued
                                               (Œª (_ , ‚ü®‚àÖ‚ü©Ôºùv) ‚Üí to-‚àà-of-ùïç-set ‚à£ inr (inl _) , ‚ü®‚àÖ‚ü©Ôºùv ‚à£)
                                               (from-‚àà-of-ùïç-set (transport (v ‚àà_) (‚ü®‚ü®‚àÖ‚ü©‚ü©Ôºùu ‚Åª¬π) v‚ààu))
            })
         (from-‚àà-of-ùïç-set u‚àà‚ü®‚àÖ,‚ü®‚ü®‚àÖ‚ü©‚ü©‚ü©)

 Example-17-v : is-transitive-set ‚ü®‚ü®‚àÖ‚ü©‚ü© ‚Üí ùüò {ùì§}
 Example-17-v transitive-‚ü®‚ü®‚àÖ‚ü©‚ü© =
   ‚à•‚à•-rec ùüò-is-prop (Œª (_ , ‚ü®‚àÖ‚ü©Ôºù‚àÖ) ‚Üí ¬¨‚àÖÔºù‚ü®‚àÖ‚ü© ‚ü®‚àÖ‚ü©Ôºù‚àÖ) (from-‚àà-of-ùïç-set ‚àÖ‚àà‚ü®‚ü®‚àÖ‚ü©‚ü©)
   where
     ‚àÖ‚àà‚ü®‚ü®‚àÖ‚ü©‚ü© : ‚àÖ ‚àà ‚ü®‚ü®‚àÖ‚ü©‚ü©
     ‚àÖ‚àà‚ü®‚ü®‚àÖ‚ü©‚ü© = transitive-‚ü®‚ü®‚àÖ‚ü©‚ü© ‚ü®‚àÖ‚ü© ‚àÖ (to-‚àà-of-ùïç-set ‚à£ _ , refl ‚à£) (to-‚àà-of-ùïç-set ‚à£ _ , refl ‚à£)
     ¬¨‚àÖÔºù‚ü®‚àÖ‚ü© : ‚ü®‚àÖ‚ü© Ôºù ‚àÖ ‚Üí ùüò {ùì§}
     ¬¨‚àÖÔºù‚ü®‚àÖ‚ü© ‚ü®‚àÖ‚ü©Ôºù‚àÖ = ¬¨x‚àà‚àÖ {‚àÖ} (transport (‚àÖ ‚àà_) ‚ü®‚àÖ‚ü©Ôºù‚àÖ (to-‚àà-of-ùïç-set ‚à£ _ , refl ‚à£))

 -- Set-theoretic ordinal
 Definition-18 : ùïç ‚Üí ùì§ ‚Å∫ Ãá
 Definition-18 = is-set-theoretic-ordinal

 Lemma-19 : {x : ùïç} ‚Üí is-set-theoretic-ordinal x
          ‚Üí {y : ùïç}
          ‚Üí y ‚àà x ‚Üí is-set-theoretic-ordinal y
 Lemma-19 = being-set-theoretic-ordinal-is-hereditary

 {- C. Set theory in homotopy type theory -}

 -- Equal images
 -- f ‚âà g denotes that f and g have equal images.
 Definition-20 : {A : ùì§ Ãá} {B : ùì• Ãá} {X : ùì£ Ãá} ‚Üí (A ‚Üí X) ‚Üí (B ‚Üí X) ‚Üí ùì§ ‚äî ùì• ‚äî ùì£ Ãá
 Definition-20 = _‚âà_

 -- Cumulative hierarchy
 Definition-21 : ùì§ ‚Å∫ Ãá
 Definition-21 = ùïç

 -- Set membership
 Definition-22 : ùïç ‚Üí ùïç ‚Üí ùì§ ‚Å∫ Ãá
 Definition-22 = _‚àà_

 -- Subset relation
 Definition-23 : ùïç ‚Üí ùïç ‚Üí ùì§ ‚Å∫ Ãá
 Definition-23 = _‚äÜ_

 Lemma-24-i : (x y : ùïç) ‚Üí (x Ôºù y) ‚Üî (x ‚äÜ y √ó y ‚äÜ x)
 Lemma-24-i x y = (Œª x=y ‚Üí Ôºù-to-‚äÜ x=y , Ôºù-to-‚äÜ (x=y ‚Åª¬π))
                , (Œª (p , q) ‚Üí ‚àà-extensionality x y p q)
 --
 Lemma-24-ii : {ùì£ : Universe} (P : ùïç ‚Üí ùì£ Ãá )
             ‚Üí ((x : ùïç) ‚Üí is-prop (P x))
             ‚Üí ((x : ùïç) ‚Üí ((y : ùïç) ‚Üí y ‚àà x ‚Üí P y) ‚Üí P x)
             ‚Üí (x : ùïç) ‚Üí P x
 Lemma-24-ii = ‚àà-induction

 -- Type of set-theoretic ordinals
 Definition-25 : ùì§ ‚Å∫ Ãá
 Definition-25 = ùïç·µí ≥·µà

 Theorem-26 : OrdinalStructure ùïç·µí ≥·µà
 Theorem-26 = _‚àà·µí ≥·µà_
            , (Œª x y ‚Üí ‚àà-is-prop-valued)
            , ‚àà·µí ≥·µà-is-well-founded
            , ‚àà·µí ≥·µà-is-extensional
            , ‚àà·µí ≥·µà-is-transitive

 {- D. Set-theoretic and type-theoretic ordinals coincide -}

 -- Map Œ¶
 Definition-27 : Ordinal ùì§ ‚Üí ùïç
 Definition-27 = Œ¶

 Lemma-28-i : (Œ± Œ≤ : Ordinal ùì§)
            ‚Üí (Œ± Ôºù Œ≤) ‚Üî (Œ¶ Œ± Ôºù Œ¶ Œ≤)
 Lemma-28-i Œ± Œ≤ = ap Œ¶ , Œ¶-is-left-cancellable Œ± Œ≤
 --
 Lemma-28-ii : (Œ± Œ≤ : Ordinal ùì§)
             ‚Üí (Œ± ‚ä≤ Œ≤) ‚Üî (Œ¶ Œ± ‚àà Œ¶ Œ≤)
 Lemma-28-ii Œ± Œ≤ = Œ¶-preserves-strict-order Œ± Œ≤ , Œ¶-reflects-strict-order Œ± Œ≤
 --
 Lemma-28-iii : (Œ± Œ≤ : Ordinal ùì§)
              ‚Üí (Œ± ‚ä¥ Œ≤) ‚Üî (Œ¶ Œ± ‚äÜ Œ¶ Œ≤)
 Lemma-28-iii Œ± Œ≤ = Œ¶-preserves-weak-order Œ± Œ≤ , Œ¶-reflects-weak-order Œ± Œ≤

 -- The map Œ¶ : Ord ‚Üí V factors through the inclusion ùïç·µí ≥·µà ‚Üí ùïç.
 Lemma-29 : Ordinal ùì§ ‚Üí ùïç·µí ≥·µà
 Lemma-29 = Œ¶·µí ≥·µà

 -- Map Œ®
 Definition-30 : ùïç ‚Üí Ordinal ùì§
 Definition-30 = Œ®

 -- Remark-31 : No formalizable content

 Proposition-32 : Œ¶·µí ≥·µà ‚àò Œ®·µí ≥·µà ‚àº id
 Proposition-32 = Œ®·µí ≥·µà-is-section-of-Œ¶·µí ≥·µà

 Theorem-33 : (OO ùì§ ‚âÉ‚Çí ùïç·¥º·¥ø·¥∞)
            √ó (OO ùì§ Ôºù ùïç·¥º·¥ø·¥∞)
 Theorem-33 = ùïç·µí ≥·µà-isomorphic-to-Ord
            , eqtoid‚Çí (OO ùì§)  ùïç·¥º·¥ø·¥∞ ùïç·µí ≥·µà-isomorphic-to-Ord

 {- E. Revisiting the rank of a set -}

 -- Type of elements
 Definition-34 : (x : ùïç) (œÉ : is-set-theoretic-ordinal x)
               ‚Üí (ùì§ ‚Å∫ Ãá)
 Definition-34 = ùïãx ch

 -- The type of elements with ‚àà is a type-theroetic ordinal.
 Proposition-35 : (x : ùïç) (œÉ : is-set-theoretic-ordinal x)
                ‚Üí Ordinal (ùì§ ‚Å∫)
 Proposition-35 = ùïãx·µí ≥·µà ch

 -- Bisimulation
 -- The ùì§-valued bisimulation relation Ôºù‚Åª is named ‚âà in the paper.
 Definition-36 : ùïç ‚Üí ùïç ‚Üí ùì§ Ãá
 Definition-36 = _Ôºù‚Åª_

 Lemma-37 : {x y : ùïç} ‚Üí (x Ôºù‚Åª y) ‚âÉ (x Ôºù y)
 Lemma-37 = Ôºù‚Åª-‚âÉ-Ôºù

 -- Membership
 -- The ùì§-valued membership relation ‚àà‚Åª is named ‚àà·µ§ in the paper.
 Definition-38 : ùïç ‚Üí ùïç ‚Üí ùì§ Ãá
 Definition-38 = _‚àà‚Åª_

 Lemma-39 : {x y : ùïç} ‚Üí x ‚àà‚Åª y ‚âÉ x ‚àà y
 Lemma-39 = ‚àà‚Åª-‚âÉ-‚àà

 -- Set quotients
 -- The ùì§-valued equivalence relation ~‚Åª is named ~·µ§ in the paper.
 Definition-40 : {A : ùì§ Ãá} (f : A ‚Üí ùïç)
               ‚Üí (A ‚Üí A ‚Üí ùì§ ‚Å∫ Ãá) √ó (ùì§ ‚Å∫ Ãá)
               √ó (A ‚Üí A ‚Üí ùì§ Ãá) √ó (ùì§ Ãá)
 Definition-40 f = _~_ f , A/~ f
                 , _~‚Åª_ f , A/~‚Åª f

 Lemma-41 : {A : ùì§ Ãá} (f : A ‚Üí ùïç)
          ‚Üí (A/~ f ‚âÉ A/~‚Åª f)
          √ó (image f ‚âÉ A/~ f)
 Lemma-41 f = A/~-‚âÉ-A/~‚Åª f
            , UF.Quotient.set-replacement-construction.image-‚âÉ-quotient
                 sq pt f ùïç-is-locally-small ùïç-is-large-set

 -- Order relation
 -- The ùì§-valued order relation ‚â∫‚Åª is named ‚â∫·µ§ in the paper.
 Definition-42 : {A : ùì§ Ãá} (f : A ‚Üí ùïç) (œÉ : is-set-theoretic-ordinal (ùïç-set f))
               ‚Üí (A/~ f ‚Üí A/~ f ‚Üí ùì§ ‚Å∫ Ãá)
               √ó (A/~‚Åª f ‚Üí A/~‚Åª f ‚Üí ùì§ Ãá)
 Definition-42 f œÉ = _‚â∫_ f
                   , _‚â∫‚Åª_ f œÉ

 Proposition-43 : {A : ùì§ Ãá} (f : A ‚Üí ùïç) (œÉ : is-set-theoretic-ordinal (ùïç-set f))
                ‚Üí Ordinal (ùì§ ‚Å∫)
                √ó Ordinal ùì§
 Proposition-43 f œÉ = A/~·µí ≥·µà f œÉ
                    , A/~‚Åª·µí ≥·µà f œÉ

 Lemma-44 : {A : ùì§ Ãá} (f : A ‚Üí ùïç) (œÉ : is-set-theoretic-ordinal (ùïç-set f))
          ‚Üí total-space·µí ≥·µà ch (ùïç-set f) œÉ Ôºù A/~·µí ≥·µà f œÉ
 Lemma-44 = total-space-is-quotient·µí ≥·µà

 Theorem-45 : {A : ùì§ Ãá} (f : A ‚Üí ùïç) (œÉ : is-set-theoretic-ordinal (ùïç-set f))
            ‚Üí Œ®·µí ≥·µà (ùïç-set f , œÉ) Ôºù A/~‚Åª·µí ≥·µà f œÉ
 Theorem-45 = Œ®·µí ≥·µà-is-quotient-of-carrier

 Corollary-46 : (x : ùïç) (œÉ : is-set-theoretic-ordinal x)
              ‚Üí Œ®·µí ≥·µà (x , œÉ) ‚âÉ‚Çí total-space·µí ≥·µà ch x œÉ
 Corollary-46 = Œ®·µí ≥·µà-is-isomorphic-to-total-space ch sq
